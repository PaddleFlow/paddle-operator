// +build !ignore_autogenerated

// Copyright 2021 The Kubeflow Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CSI) DeepCopyInto(out *CSI) {
	*out = *in
	in.MountOptions.DeepCopyInto(&out.MountOptions)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CSI.
func (in *CSI) DeepCopy() *CSI {
	if in == nil {
		return nil
	}
	out := new(CSI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cache) DeepCopyInto(out *Cache) {
	*out = *in
	if in.Levels != nil {
		in, out := &in.Levels, &out.Levels
		*out = make([]CacheLevel, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cache.
func (in *Cache) DeepCopy() *Cache {
	if in == nil {
		return nil
	}
	out := new(Cache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheLevel) DeepCopyInto(out *CacheLevel) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheLevel.
func (in *CacheLevel) DeepCopy() *CacheLevel {
	if in == nil {
		return nil
	}
	out := new(CacheLevel)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheStatus) DeepCopyInto(out *CacheStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheStatus.
func (in *CacheStatus) DeepCopy() *CacheStatus {
	if in == nil {
		return nil
	}
	out := new(CacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClearJobOptions) DeepCopyInto(out *ClearJobOptions) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClearJobOptions.
func (in *ClearJobOptions) DeepCopy() *ClearJobOptions {
	if in == nil {
		return nil
	}
	out := new(ClearJobOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CronJobStatus) DeepCopyInto(out *CronJobStatus) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.LastScheduleTime != nil {
		in, out := &in.LastScheduleTime, &out.LastScheduleTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CronJobStatus.
func (in *CronJobStatus) DeepCopy() *CronJobStatus {
	if in == nil {
		return nil
	}
	out := new(CronJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobOptions) DeepCopyInto(out *JobOptions) {
	*out = *in
	if in.SyncOptions != nil {
		in, out := &in.SyncOptions, &out.SyncOptions
		*out = new(SyncJobOptions)
		**out = **in
	}
	if in.WarmupOptions != nil {
		in, out := &in.WarmupOptions, &out.WarmupOptions
		*out = new(WarmupJobOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.RmrOptions != nil {
		in, out := &in.RmrOptions, &out.RmrOptions
		*out = new(RmrJobOptions)
		(*in).DeepCopyInto(*out)
	}
	if in.ClearOptions != nil {
		in, out := &in.ClearOptions, &out.ClearOptions
		*out = new(ClearJobOptions)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobOptions.
func (in *JobOptions) DeepCopy() *JobOptions {
	if in == nil {
		return nil
	}
	out := new(JobOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsName) DeepCopyInto(out *JobsName) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsName.
func (in *JobsName) DeepCopy() *JobsName {
	if in == nil {
		return nil
	}
	out := new(JobsName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuiceFSMountOptions) DeepCopyInto(out *JuiceFSMountOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuiceFSMountOptions.
func (in *JuiceFSMountOptions) DeepCopy() *JuiceFSMountOptions {
	if in == nil {
		return nil
	}
	out := new(JuiceFSMountOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuiceFSSyncOptions) DeepCopyInto(out *JuiceFSSyncOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuiceFSSyncOptions.
func (in *JuiceFSSyncOptions) DeepCopy() *JuiceFSSyncOptions {
	if in == nil {
		return nil
	}
	out := new(JuiceFSSyncOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JuiceFSWarmupOptions) DeepCopyInto(out *JuiceFSWarmupOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JuiceFSWarmupOptions.
func (in *JuiceFSWarmupOptions) DeepCopy() *JuiceFSWarmupOptions {
	if in == nil {
		return nil
	}
	out := new(JuiceFSWarmupOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MountOptions) DeepCopyInto(out *MountOptions) {
	*out = *in
	if in.JuiceFSMountOptions != nil {
		in, out := &in.JuiceFSMountOptions, &out.JuiceFSMountOptions
		*out = new(JuiceFSMountOptions)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MountOptions.
func (in *MountOptions) DeepCopy() *MountOptions {
	if in == nil {
		return nil
	}
	out := new(MountOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RmrJobOptions) DeepCopyInto(out *RmrJobOptions) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RmrJobOptions.
func (in *RmrJobOptions) DeepCopy() *RmrJobOptions {
	if in == nil {
		return nil
	}
	out := new(RmrJobOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RuntimeStatus) DeepCopyInto(out *RuntimeStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RuntimeStatus.
func (in *RuntimeStatus) DeepCopy() *RuntimeStatus {
	if in == nil {
		return nil
	}
	out := new(RuntimeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleJob) DeepCopyInto(out *SampleJob) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleJob.
func (in *SampleJob) DeepCopy() *SampleJob {
	if in == nil {
		return nil
	}
	out := new(SampleJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SampleJob) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleJobList) DeepCopyInto(out *SampleJobList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SampleJob, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleJobList.
func (in *SampleJobList) DeepCopy() *SampleJobList {
	if in == nil {
		return nil
	}
	out := new(SampleJobList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SampleJobList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleJobSpec) DeepCopyInto(out *SampleJobSpec) {
	*out = *in
	if in.SampleSetRef != nil {
		in, out := &in.SampleSetRef, &out.SampleSetRef
		*out = new(v1.LocalObjectReference)
		**out = **in
	}
	in.JobOptions.DeepCopyInto(&out.JobOptions)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleJobSpec.
func (in *SampleJobSpec) DeepCopy() *SampleJobSpec {
	if in == nil {
		return nil
	}
	out := new(SampleJobSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleJobStatus) DeepCopyInto(out *SampleJobStatus) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleJobStatus.
func (in *SampleJobStatus) DeepCopy() *SampleJobStatus {
	if in == nil {
		return nil
	}
	out := new(SampleJobStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleSet) DeepCopyInto(out *SampleSet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleSet.
func (in *SampleSet) DeepCopy() *SampleSet {
	if in == nil {
		return nil
	}
	out := new(SampleSet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SampleSet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleSetList) DeepCopyInto(out *SampleSetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SampleSet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleSetList.
func (in *SampleSetList) DeepCopy() *SampleSetList {
	if in == nil {
		return nil
	}
	out := new(SampleSetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SampleSetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleSetSpec) DeepCopyInto(out *SampleSetSpec) {
	*out = *in
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(Source)
		(*in).DeepCopyInto(*out)
	}
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
	if in.CSI != nil {
		in, out := &in.CSI, &out.CSI
		*out = new(CSI)
		(*in).DeepCopyInto(*out)
	}
	in.Cache.DeepCopyInto(&out.Cache)
	if in.NodeAffinity != nil {
		in, out := &in.NodeAffinity, &out.NodeAffinity
		*out = new(v1.VolumeNodeAffinity)
		(*in).DeepCopyInto(*out)
	}
	if in.Tolerations != nil {
		in, out := &in.Tolerations, &out.Tolerations
		*out = make([]v1.Toleration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleSetSpec.
func (in *SampleSetSpec) DeepCopy() *SampleSetSpec {
	if in == nil {
		return nil
	}
	out := new(SampleSetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleSetStatus) DeepCopyInto(out *SampleSetStatus) {
	*out = *in
	if in.CacheStatus != nil {
		in, out := &in.CacheStatus, &out.CacheStatus
		*out = new(CacheStatus)
		**out = **in
	}
	if in.RuntimeStatus != nil {
		in, out := &in.RuntimeStatus, &out.RuntimeStatus
		*out = new(RuntimeStatus)
		**out = **in
	}
	out.JobsName = in.JobsName
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleSetStatus.
func (in *SampleSetStatus) DeepCopy() *SampleSetStatus {
	if in == nil {
		return nil
	}
	out := new(SampleSetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SampleStrategy) DeepCopyInto(out *SampleStrategy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SampleStrategy.
func (in *SampleStrategy) DeepCopy() *SampleStrategy {
	if in == nil {
		return nil
	}
	out := new(SampleStrategy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Source) DeepCopyInto(out *Source) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(v1.SecretReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Source.
func (in *Source) DeepCopy() *Source {
	if in == nil {
		return nil
	}
	out := new(Source)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SyncJobOptions) DeepCopyInto(out *SyncJobOptions) {
	*out = *in
	out.JuiceFSSyncOptions = in.JuiceFSSyncOptions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SyncJobOptions.
func (in *SyncJobOptions) DeepCopy() *SyncJobOptions {
	if in == nil {
		return nil
	}
	out := new(SyncJobOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarmupJobOptions) DeepCopyInto(out *WarmupJobOptions) {
	*out = *in
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	out.Strategy = in.Strategy
	out.JuiceFSWarmupOptions = in.JuiceFSWarmupOptions
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarmupJobOptions.
func (in *WarmupJobOptions) DeepCopy() *WarmupJobOptions {
	if in == nil {
		return nil
	}
	out := new(WarmupJobOptions)
	in.DeepCopyInto(out)
	return out
}
